pipeline {
    agent any

    environment {
        
        DEPLOY_BACKEND_DIR = "/var/api/project2AyD2-backend"
        
        MICRO_SERVICE_API_GATEWAY = "api-gateway"
        SERVICE_API_GATEWAY_NAME_JAR = "api-gateway.jar"
        DEPLOY_API_GATEWAY_JAR = false
        
        MICRO_SERVICE_CONFIG = "config-service"
        SERVICE_CONFIG_NAME_JAR = "config-service.jar"
        DEPLOY_CONFIG_JAR = false
        
        MICRO_SERVICE_EMPLOYEE = "employee-service"
        SERVICE_EMPLOYEE_NAME_JAR = "employee-service.jar"
        DEPLOY_EMPLOYEE_JAR = false
        
        MICRO_SERVICE_EUREKA = "eureka-server"
        SERVICE_EUREKA_NAME_JAR = "eureka-server.jar"
        DEPLOY_EUREKA_JAR = false
        
        MICRO_SERVICE_GAME = "game-service"
        SERVICE_GAME_NAME_JAR = "game-service.jar"
        DEPLOY_GAME_JAR = false
        
        MICRO_SERVICE_INVENTORY = "inventory-service"
        SERVICE_INVENTORY_NAME_JAR = "inventory-service.jar"
        DEPLOY_INVENTORY_JAR = false
        
        MICRO_SERVICE_INVOICE = "invoice-service"
        SERVICE_INVOICE_NAME_JAR = "invoice-service.jar"
        DEPLOY_INVOICE_JAR = false
        
        MICRO_SERVICE_PACKAGE = "package-service"
        SERVICE_PACKAGE_NAME_JAR = "package-service.jar"
        DEPLOY_PACKAGE_JAR = false
        
        MICRO_SERVICE_PRODUCT = "product-service"
        SERVICE_PRODUCT_NAME_JAR = "product-service.jar"
        DEPLOY_PRODUCT_JAR = false
        
        MICRO_SERVICE_RESERVATION = "reservation-service"
        SERVICE_RESERVATION_NAME_JAR = "reservation-service.jar"
        DEPLOY_RESERVATION_JAR = false
        
    }

    stages {
        
        stage('Checkout') {
            steps {
                git branch: 'dev', url: 'https://github.com/FernandoJRR/Proyecto2AyD2-Back.git'
            }
        }
        
        stage ('Build Common Lib'){
            steps {
                script {
                    // La libreria com√∫n se encuentra en la ra√≠z del proyecto y no tiene pruebas
                    echo "üöÄ Compilando librer√≠a com√∫n"
                }
            }
        }
    }

    post {
        success {
            echo "üéâ Pipeline completado con √©xito."
        }
        failure {
            echo "‚ùå Algo fall√≥ en el pipeline."
        }
    }
}
